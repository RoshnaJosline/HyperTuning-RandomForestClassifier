# -*- coding: utf-8 -*-
"""M5-Assignment level-2(Hypertuning-RandomForestClassifier(5).ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1d2kij0FdD6IvGx5Gr0KL383g8hcMK2ru
"""

import numpy as np
import pandas as pd

from google.colab import files
files.upload()

df=pd.read_csv('/content/heart.csv')

df

df.shape

df.info()

df.isnull().sum()

X=df.drop('output',axis=1)
y=df.output

from sklearn.model_selection import train_test_split

X_train,X_test,y_train,y_test=train_test_split(X,y,test_size=0.30,random_state=0)

from sklearn.preprocessing import StandardScaler

sc=StandardScaler()
X_train=sc.fit_transform(X_train)
X_test=sc.transform(X_test)

"""**Hypertuning **"""

from sklearn.ensemble import RandomForestClassifier

rf=RandomForestClassifier(n_estimators=100,criterion='gini',max_depth=3,n_jobs=2,oob_score=True)
rf.fit(X_train,y_train)

y_predict=rf.predict(X_test)

from sklearn.metrics import accuracy_score
print('Accuracy_Score: ',accuracy_score(y_test,y_predict))

from sklearn.ensemble import RandomForestClassifier

rf=RandomForestClassifier(n_estimators=150,criterion='gini',max_depth=3,n_jobs=3,oob_score=False)
rf.fit(X_train,y_train)

y_predict=rf.predict(X_test)

from sklearn.metrics import accuracy_score
print('Accuracy_Score: ',accuracy_score(y_test,y_predict))

from sklearn.ensemble import RandomForestClassifier

rf=RandomForestClassifier(n_estimators=100,criterion='entropy',max_depth=2,n_jobs=3,oob_score=True)
rf.fit(X_train,y_train)

y_predict=rf.predict(X_test)

from sklearn.metrics import accuracy_score
print('Accuracy_Score: ',accuracy_score(y_test,y_predict))

from sklearn.ensemble import RandomForestClassifier

rf=RandomForestClassifier(n_estimators=150,criterion='entropy',max_depth=3,n_jobs=3,oob_score=True)
rf.fit(X_train,y_train)

y_predict=rf.predict(X_test)

from sklearn.metrics import accuracy_score
print('Accuracy_Score: ',accuracy_score(y_test,y_predict))